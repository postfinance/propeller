name: CLI Pipeline

on:
  push:
    branches-ignore:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  HUSKY: 0
  RUST_TOOLCHAIN: stable
  TOOLCHAIN_PROFILE: minimal

jobs:
  build:
    name: Binary Full-Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v5
        with:
          submodules: recursive
      - name: Install stable Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: ${{ env.TOOLCHAIN_PROFILE }}
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
          components: rustfmt, clippy
      - name: Use Cache
        uses: Swatinem/rust-cache@v2
      - name: cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
      - name: Unit Tests
        uses: actions-rs/cargo@v1
        env:
          RUST_TEST_THREADS: 1
        with:
          command: test
          args: --bin propeller
      - name: Integration Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --test * -- --nocapture --test-threads=1
      - name: Build Binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: target/release/propeller
  build-windows:
    name: Binary Windows-Crosscompile
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v5
        with:
          submodules: recursive
      - name: Install stable Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: ${{ env.TOOLCHAIN_PROFILE }}
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
      - name: Use Cache
        uses: Swatinem/rust-cache@v2
      - name: Install cross
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cross
      - name: Compile Binary for Windows
        env:
          CROSS_REMOTE_COPY_CACHE: 1
        run: cross build --target x86_64-pc-windows-gnu --release
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: target/x86_64-pc-windows-gnu/release/propeller.exe
  check:
    name: 'Resources Validation'
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v5
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.15.0
          cache: 'npm'
      - name: Install npm Packages
        run: npm ci
      - name: Check Format of Resources
        run: npm run prettier:format
